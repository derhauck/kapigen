noop: true
versioning: false
dependencyProxy: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}
tags:
  - ${KAPIGEN_DEFAULT_RUNNER_TAG}
pipelines:
  - type: docker
    id: test-cli
    config:
      path: .
      name: test-cli

  - type: docker
    id: test-file
    config:
      path: cli
      name: test-file
      dockerfile: test.Dockerfile
      buildArgs:
        TEST: "Has set Var"

  - type: docker
    id: duplicate-test
    config:
      path: .
      dockerfile: Dockerfile
      name: test-cli

  - type: golang
    id: test-go
    config:
      path: cli
      docker:
        path: cli
        dockerfile: test.Dockerfile
        name: test-go
        buildArgs:
          TEST: "Has set Var"

  - type: docker
    id: test-cli2
    config:
      path: .
      name: test-cli

  - type: docker
    id: test-file2
    config:
      path: .
      name: test-file

  - type: docker
    id: duplicate-test2
    config:
      path: .
      dockerfile: Dockerfile
      name: test-cli

  - type: golang
    id: test-go2
    config:
      imageName: '${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:1.21.3-alpine3.18'
      path: cli
      lint:
        mode: permissive

  - type: docker
    id: test-cli3
    config:
      path: .
      name: test-cli

  - type: docker
    id: test-file3
    config:
      path: .
      name: test-file

  - type: docker
    id: duplicate-test3
    config:
      path: .
      dockerfile: Dockerfile
      name: test-cli

  - type: golang
    id: test-go3
    config:
      imageName: '${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:1.21.3-alpine3.18'
      path: cli
      coverage:
        packages:
          - ./...
      lint:
        mode: disabled

  - type: php
    id: php-integration
    config:
      composer:
        path: cli/tests/php
      phpunit:
        args: --testsuite integration
      docker:
        path: cli/tests/php
      services:
        - name: db
          docker:
            path: cli/tests/php/tests/integration
          port: 3306

  - type: php
    id: php-unit
    config:
      composer:
        path: cli/tests/php
      phpunit:
        args: --testsuite unit
      docker:
        path: cli/tests/php

  - type: generic
    id: generic-job-image
    config:
      scripts:
        - 'echo " \"hello ${HOST}!" > test.txt'
      variables:
        HOST: "vm-private-ci-image"
      artifacts:
        name: test
        paths:
          - test.txt

  - type: generic
    id: generic-job-docker
    config:
      scripts:
        - 'echo " \"hello ${HOST}!" > test.txt'
      variables:
        HOST: "vm-private-ci-docker"
      artifacts:
        name: test
        paths:
          - test.txt
      docker:
        path: cli
        context: .
        dockerfile: test.Dockerfile
        buildArgs:
          FOO: bar
