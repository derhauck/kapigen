
[TestCreatePipeline/can_create_pipeline - 1]
map[string]interface {}{
    "allow_failure": bool(false),
    "image":         map[string]interface {}{
        "name":        "alpine",
        "pull_policy": "always",
    },
    "needs": []interface {}{
    },
    "rules": []interface {}{
        map[string]interface {}{
            "allow_failure": bool(false),
            "if":            "$KTC_STOP_PIPELINE != \"false\" && $DEBUG == null",
            "when":          "never",
        },
        map[string]interface {}{
            "allow_failure": bool(false),
            "if":            "$CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH",
            "when":          "on_success",
        },
        map[string]interface {}{
            "allow_failure": bool(false),
            "if":            "$KTC_TEST_PIPELINE",
            "when":          "on_success",
        },
    },
    "script": []interface {}{
        "echo hello world",
    },
    "services": []interface {}{
    },
    "stage": "dynamic",
    "tags":  []interface {}{
        "pressure:medium",
    },
}
map[string]interface {}{
    "KTC_STOP_PIPELINE": "false",
}
map[string]interface {}{
    "name":  "default",
    "rules": []interface {}{
        map[string]interface {}{
            "if":   "$CI_MERGE_REQUEST_ID",
            "when": "always",
        },
        map[string]interface {}{
            "if":   "$CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH",
            "when": "always",
        },
        map[string]interface {}{
            "if":   "$CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'",
            "when": "always",
        },
        map[string]interface {}{
            "if":   "$CI_COMMIT_TAG != null",
            "when": "always",
        },
    },
}
map[string]interface {}{
}
nil
---
