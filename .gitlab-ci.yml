workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merge_train"
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
    - when: never

default:
  tags:
    - pressure:medium
stages:
  - build
  - trigger
  - collect

Build:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:1.21

  before_script:
    - cd cli
  script:
    - go mod download
    - go run . pipeline generate -v --mode gitlab
  artifacts:
    paths:
      - cli/pipeline.yaml

Tests:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:1.21
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'

  before_script:
    - cd cli
  script:
    - go mod download
    - go run . pipeline generate pipeline -v --config test.kapigen.yaml
    - go run . pipeline generate  -v --config test.kapigen.yaml --no-merge --file pipeline-no-merge.yaml
  artifacts:
    paths:
      - cli/pipeline.yaml
      - cli/pipeline-no-merge.yaml


Trigger Build:
  stage: trigger
  trigger:
    strategy: depend
    include:
      - artifact: cli/pipeline.yaml
        job: Build

    forward:
      pipeline_variables: true

Trigger Tests:
  stage: trigger
  variables:
    KTC_TEST_PIPELINE: true
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'
  trigger:
    strategy: depend
    include:
      - artifact: cli/pipeline.yaml
        job: Tests

    forward:
      pipeline_variables: true


Start Big Pipeline:
  stage: trigger
  when: manual
  allow_failure: true
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:1.21
  script:
    - echo "trigger big pipeline"

Trigger No-Merge Tests:
  stage: trigger
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'
  parallel:
    matrix:
      - load:
          - pip1
          - pip2
          - pip3
          - pip4
# overkill, will not cause more load since karpenter limits runner
#          - pip5
#          - pip6
#          - pip7
#          - pip8
  trigger:
    strategy: depend
    include:
      - artifact: cli/pipeline-no-merge.yaml
        job: Tests
    forward:
      pipeline_variables: true
  needs:
    - Start Big Pipeline

Reports - Junit:
  stage: collect
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:1.21

  before_script:
    - cd cli
  script:
    - go mod download
    - go run . pipeline reports -v
  artifacts:
    reports:
      junit: '**/junit.xml'