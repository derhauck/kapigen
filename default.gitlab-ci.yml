workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
    - when: never
variables:
  KAPIGEN_VERSION: latest
#  KAPIGEN_DEFAULT_RUNNER_TAG: pressure:medium
default:
  tags:
    - ${KAPIGEN_DEFAULT_RUNNER_TAG}
stages:
  - build
  - trigger
  - collect

.std:
  rules:
    - exists:
        - .kapigen/*.go
      when: never
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
    - when: never

.dsl:
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_EVENT_TYPE == "merged_result"
      exists:
        - .kapigen/*.go
    - if: $CI_MERGE_REQUEST_IID && $CI_PIPELINE_SOURCE == 'merge_request_event'
      exists:
        - .kapigen/*.go
    - if: $CI_PIPELINE_SOURCE == "schedule"
      exists:
        - .kapigen/*.go
    - if: $CI_PIPELINE_SOURCE == "web"
      exists:
        - .kapigen/*.go
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH
      exists:
        - .kapigen/*.go
    - if: $CI_COMMIT_TAG
      exists:
        - .kapigen/*.go
    - when: never

Build:
  stage: build
  extends: .std
  image:
    name: registry.gitlab.com/kateops/kapigen/cli:${KAPIGEN_VERSION}
    entrypoint: [""]
  script:
    - kapigen pipeline generate -v  --mode gitlab
  artifacts:
    paths:
      - pipeline.yaml

Trigger Build:
  extends: .std
  stage: trigger
  trigger:
    strategy: depend
    include:
      - artifact: pipeline.yaml
        job: Build

#    forward:
#      pipeline_variables: true

Build (DSL):
  stage: build
  extends: .dsl
  image:
    name: golang:1.22
  script:
    - cd .kapigen
    - go mod download
    - go run .
  artifacts:
    paths:
      - .kapigen/pipeline.yaml

Trigger Build (DSL):
  extends: .dsl
  stage: trigger
  trigger:
    strategy: depend
    include:
      - artifact: .kapigen/pipeline.yaml
        job: Build (DSL)

#    forward:
#      pipeline_variables: true

Reports - Junit:
  stage: collect
  allow_failure: true
  when: always
  image:
    name: registry.gitlab.com/kateops/kapigen/cli:${KAPIGEN_VERSION}
    entrypoint: [""]
  script:
    - kapigen pipeline reports -v --private-token "${KAPIGEN_PRIVATE_TOKEN_NAME}"
  coverage: "/INFO:.+: ([0-9.]+)/"
  artifacts:
    reports:
      junit: '**/*.xml'